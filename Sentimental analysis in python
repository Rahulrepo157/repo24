import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import roc_auc_score, f1_score, confusion_matrix
from sklearn.model_selection import train_test_split

# Load the dataset from the provided URL
url = "https://lazyprogrammer.me/course files/AirlineTweets.csv"  # Update with the correct URL
df = pd.read_csv(url)
import pandas as pd
import matplotlib.pyplot as plt

# Load the dataset from the provided file
df = pd.read_csv("AirlineTweets.csv")

# Display the first few rows of the dataframe
print(df.head())

# Create a new dataframe with only 'airline_sentiment' and 'text' columns
df_filtered = df[['airline_sentiment', 'text']].copy()

# Display the first few rows of the filtered dataframe
print(df_filtered.head())

# Plot histogram of the sentiment labels
df_filtered['airline_sentiment'].hist()

# Create a mapping for sentiment labels
target_map = {'positive': 1, 'negative': 0, 'neutral': 2}

# Map the sentiment labels to target values
df_filtered['target'] = df_filtered['airline_sentiment'].map(target_map)

vectorizer = TfidfVectorizer(max_features=2000)

# Transform the text data into TF-IDF vectors for training and testing
X_train = vectorizer.fit_transform(df_train['text'])
X_test = vectorizer.transform(df_test['text'])

# Extract target labels for training and testing
y_train = df_train['target']
y_test = df_test['target'] 
model = LogisticRegression(max_iter=500)
model.fit(X_train, y_train)

# Calculate and print the accuracy on training data
train_accuracy = model.score(X_train, y_train)
print("Train accuracy:", train_accuracy)

# Calculate and print the accuracy on test data
test_accuracy = model.score(X_test, y_test)
print("Test accuracy:", test_accuracy) 

